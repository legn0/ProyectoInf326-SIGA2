
services:
  mysql-container:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: 'horarios'
      MYSQL_USER: 'yo'
      MYSQL_PASSWORD: 'admin'
      MYSQL_ROOT_PASSWORD: 'admin'
    ports:
      - '3307:3306'
    volumes:
      - db_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

  fastapi:
    build: 
      context: .
      dockerfile: ./API/Dockerfile  
    command: uvicorn API:app --reload --host 0.0.0.0 --port 8000 
    ports:
      - '8001:8000'
    volumes:
      - .:/app
    environment:
      - DB_USER=yo
      - DB_PASSWORD=admin
      - DB_HOST=mysql-container
      - DB_DATABASE=horarios
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_EXCHANGE=horario_events
      - RABBITMQ_EXCHANGE_TYPE=topic
    depends_on:
      mysql-container: 
        condition: service_healthy  # Asegúrate de que el contenedor de MySQL esté saludable
      rabbitmq:
        condition: service_healthy  # Asegúrate de que RabbitMQ esté saludable
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  consumer:
    build: 
      context: .
      dockerfile: ./RabbitConsume/Dockerfile
    command: python RabbitConsume.py
    volumes:
      - .:/app
    environment:
      - DB_USER=yo
      - DB_PASSWORD=admin
      - DB_HOST=mysql-container
      - DB_DATABASE=horarios
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_EXCHANGE=horario_events
      - RABBITMQ_EXCHANGE_TYPE=topic
    depends_on:
      mysql-container: 
        condition: service_healthy  # Asegúrate de que el contenedor de MySQL esté saludable
      rabbitmq:
        condition: service_healthy  # Asegúrate de que RabbitMQ esté saludable
      fastapi:
        condition: service_healthy  # Asegúrate de que el contenedor de FastAPI esté saludable

volumes:
  db_data: